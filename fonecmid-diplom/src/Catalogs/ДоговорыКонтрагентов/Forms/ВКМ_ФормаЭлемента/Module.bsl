

//++ Дроздков_ВКМ 19.06.24
#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ТипРеквизита = Новый ОписаниеТипов("Булево");
	РеквизитФормы = Новый РеквизитФормы("ДобавленыПоляДляАбонентскогоДоговора", ТипРеквизита, "", "");	
	
	ДобавляемыеРеквизиты = Новый Массив;
	ДобавляемыеРеквизиты.Добавить(РеквизитФормы);
	
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	ВидДоговора = Объект.ВидДоговора;
	
	Если ВидДоговора <> Неопределено Тогда
	
		ВКМ_ОтображениеЭлементовФормы(ВидДоговора);
	
	КонецЕсли;
	
КонецПроцедуры
	
&НаКлиенте
Процедура ВидДоговораОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, ВыборДобавлением, СтандартнаяОбработка)
	
	ВКМ_ОтображениеЭлементовФормы(ВыбранноеЗначение);
	 
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	Если ТекущийОбъект.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание Тогда
		
		 //Проверка заполнения реквизитов договора абонентского обслуживания
		 Если 
		 
			 НЕ ЗначениеЗаполнено(ТекущийОбъект.ВКМ_ДатаНачалаДействия)
			 ИЛИ НЕ ЗначениеЗаполнено(ТекущийОбъект.ВКМ_ДатаОкончанияДействия)
			 ИЛИ НЕ ЗначениеЗаполнено(ТекущийОбъект.ВКМ_РазмерАбоненсткойПлаты)	
			 ИЛИ НЕ ЗначениеЗаполнено(ТекущийОбъект.ВКМ_СтоимостьЧаса)
			 
		 Тогда		 	 
			
			 ОбщегоНазначения.СообщитьПользователю("Не заполнены обязательные поля договора");
			 Отказ = Истина;
		
		 КонецЕсли;
		 
		 //Проверка дат начала и окончания действия договора
		 Если ТекущийОбъект.ВКМ_ДатаОкончанияДействия < ТекущийОбъект.ВКМ_ДатаНачалаДействия Тогда
		 
			 ОбщегоНазначения.СообщитьПользователю("Дата окончания договора не может быть раньше даты начала!");
			 Отказ = Истина;		 	 
		 	
		 КонецЕсли;
		 
		 //Проверка ненулевых и неотрицательных значений абоненсткой платы и стоимости часа
		 Если 
		 
		 ТекущийОбъект.ВКМ_РазмерАбоненсткойПлаты <= 0 
		 ИЛИ ТекущийОбъект.ВКМ_СтоимостьЧаса <= 0 
		 
		 Тогда
		 
			 ОбщегоНазначения.СообщитьПользователю("Ошибка! Стоимость абонентской платы и часа работ должна быть больше нуля");
			 Отказ = Истина;		 	 
		 	
		 КонецЕсли;		 
		 		 
	Иначе
		
		ТекущийОбъект.ВКМ_ДатаНачалаДействия = Неопределено;
		ТекущийОбъект.ВКМ_ДатаОкончанияДействия = Неопределено;
		ТекущийОбъект.ВКМ_РазмерАбоненсткойПлаты = Неопределено;	
		ТекущийОбъект.ВКМ_СтоимостьЧаса = Неопределено;				
			 
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти
//--

//++ Дроздков_ВКМ 19.06.24
#Область ДоработкиВКМ

&НаСервере
Процедура ВКМ_ОтображениеЭлементовФормы(ВидДоговора)
	
	Если ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание Тогда	
	
		//Добавление поля "Дата начала действия"
		НовыйЭлементНачалоДействия = Элементы.Добавить("ДатаНачалаДействия", Тип("ПолеФормы"));
		НовыйЭлементНачалоДействия.ПутьКДанным = "Объект.ВКМ_ДатаНачалаДействия";
		НовыйЭлементНачалоДействия.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлементНачалоДействия.Заголовок = "Дата начала действия договора";
		
		//Добавление поля "Дата окончания действия"
		НовыйЭлементОкончаниеДействия = Элементы.Добавить("ДатаОкончанияДействия", Тип("ПолеФормы"));
		НовыйЭлементОкончаниеДействия.ПутьКДанным = "Объект.ВКМ_ДатаОкончанияДействия";
		НовыйЭлементОкончаниеДействия.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлементОкончаниеДействия.Заголовок = "Дата окончания действия договора";
		
		//Добавление поля "Размер абонентской платы"
		НовыйЭлементАбонентскаяПлата = Элементы.Добавить("РазмерАбонентскойПлаты", Тип("ПолеФормы"));
		НовыйЭлементАбонентскаяПлата.ПутьКДанным = "Объект.ВКМ_РазмерАбоненсткойПлаты";
		НовыйЭлементАбонентскаяПлата.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлементАбонентскаяПлата.Заголовок = "Размер абонентской платы";
		
		//Добавление поля "Стоимость часа работы"
		НовыйЭлементСтоимостьЧаса = Элементы.Добавить("СтоимостьЧасаРаботы", Тип("ПолеФормы"));
		НовыйЭлементСтоимостьЧаса.ПутьКДанным = "Объект.ВКМ_СтоимостьЧаса";
		НовыйЭлементСтоимостьЧаса.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлементСтоимостьЧаса.Заголовок = "Стоимость часа работы";
		
		//Взведение реквизита формы
		ЭтотОбъект.ДобавленыПоляДляАбонентскогоДоговора = Истина;						
	
	Иначе 
		
		//Если были выведены элементы формы - удаление их с формы
		
		Если ЭтотОбъект.ДобавленыПоляДляАбонентскогоДоговора = Истина Тогда
		
		ДатаНачалаДействияЭлемент = ЭтотОбъект.Элементы.Найти("ДатаНачалаДействия");
		ЭтотОбъект.Элементы.Удалить(ДатаНачалаДействияЭлемент);	
			
		ДатаОкончанияДействияЭлемент = ЭтотОбъект.Элементы.Найти("ДатаОкончанияДействия");	
		ЭтотОбъект.Элементы.Удалить(ДатаОкончанияДействияЭлемент);
			
		РазмерАбонентскойПлатыЭлемент = ЭтотОбъект.Элементы.Найти("РазмерАбонентскойПлаты");	
		ЭтотОбъект.Элементы.Удалить(РазмерАбонентскойПлатыЭлемент);		
					
		СтоимостьЧасаРаботыЭлемент = ЭтотОбъект.Элементы.Найти("СтоимостьЧасаРаботы");
		ЭтотОбъект.Элементы.Удалить(СтоимостьЧасаРаботыЭлемент);
		
		ДобавленыПоляДляАбонентскогоДоговора = Ложь;
			 		 
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
//-- 